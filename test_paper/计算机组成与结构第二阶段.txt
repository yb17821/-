 18. (5分)关于主存下列叙述正确的是（ ）。 
A. CPU可直接访问主存，但不能直接访问辅存 
B. CPU可直接访问主存，也直接访问辅存 
C. CPU不能直接访问主存，也不能直接访问辅存 

D. CPU不能直接访问主存，但能直接访问辅存   
答案 A 
 10. (5分)在组合逻辑的硬布线控制器中，时序信号是（ ）。 
A. 时钟源的输入信号 
B. 操作信号 
C. 操作控制信号 
D. 操作定时信号   
答案 
D 
 4. (5分)动态半导体存储器的特点是（ ）。 
A. 在工作中存储器内容会产生变化 
B. 每次读出后，需要根据原存内容重新写入一遍 
C. 每隔一定时间，需要根据原存内容重新写入一遍 

D. 在工作中需要动态地改变访存地址   
答案 C 
 20. (5分)微程序控制器中，机器指令与微指令的关系是（ ）。 
A. 每一条机器指令由一条微指令来执行 
B. 每一条机器指令由一段用微指令编成的微程序来解释执行 

C. 一段机器指令组成的程序可由一条微指令来执行 
D. 一条微指令由若干条机器指令组成   
答案 B 
 2. (5分)下列外存中，属于顺序存取存储器的是（ ）。 
A. 软盘 
B. 磁带 
C. 硬盘 
D. 光盘   
答案 B 
 19. (5分)计算机系统中仅由硬件设计者使用的指令是（ ）。 
A. 机器指令 
B. 汇编指令 
C. 特权指令 
D. 微指令   
答案 D 
 14. (5分)一般说来，直接映象常用在（ ）。 
A. 小容量高速Cache中 
B. 大容量高速Cache中 
C. 小容量低速Cache中 
D. 大容量低速Cache中 
  
答案 B 
 6. (5分)某SRAM芯片，其存储容量为512K×8位，该芯片的地址线和数据线数目为（ ）。 
A. 8，512 
B. 512，8 
C. 18，8 
D. 
19，8   
答案 D 
 16. (5分)用于对某个寄存器中操作数的寻址方式称为（ ）寻址。 
A. 直接 
B. 间接 
C. 寄存器直接 
D. 寄存器间接   
答案 C 
 1. (5分)关于机器指令的叙述不正确的是（ ）。 
A. 机器指令系统是计算机所具有的全部指令的集合。 
B. 机器指令通常包括操作码、地址码两部分，按地址个数分为零地址指令、一地址指令、二地址指令、三地址指令。 
C. 机器指令的长度取决于操作码长度、操作数地址长度、操作数个数。 
D. 系列计算机是指指令系统完全相同、基本体系结构相同的一系列计算机。   
答案 D 
 3. (5分)在虚拟存储器中，当程序正在执行时，由（ ）完成地址映象。 
A. 程序员 
B. 编译器 
C. 装入程序 
D. 操作系统   
答案 D 
 12. (5分)在相对寻址方式中，若指令中的地址码为X，则操作数的地址为（ ）。 
A. X 
B. X+段地址 
C. （PC）+X 
D. X+变址寄存器 
  
答案 C 
 13. (5分)在微程序控制器中，一条机器指令的功能通常由（ ）。 
A. 一条微指令实现 
B. 一段微程序实现 
C. 一个指令码实现 
D. 一个条件码实现 
  
答案 B 
 17. (5分)假设寄存器R中的数为200，主存地址为200和300的存储单元中存放的内容分别是300和400，若访问到的操作数为200，则所采用的寻址方式为（ 
）。 
A. 立即寻址#200 
B. 寄存器间接寻址(R) 
C. 存储器间接寻址(200) 
D. 直接寻址200   
答案 A 
 8. (5分)断电后将丢失信息的是（ ）。 
A. ROM 
B. RAM 
C. 磁盘 
D. 光盘   
答案 B 
 7. (5分)在CPU中跟踪指令后继地址的寄存器是（ ）。 
A. 主存地址寄存器 
B. 程序计数器 
C. 指令寄存器 
D. 状态条件寄存器   
答案 
B 
 5. (5分)指令周期是指（ ）。 
A. CPU从主存取出一条指令的时间 
B. CPU执行一条指令的时间 
C. CPU从主存取出一条指令加上CPU执行这条指令的时间 

D. 时钟周期时间   
答案 C 
 11. (5分)堆栈指针SP的内容是（ ）。 
A. 栈顶地址 
B. 栈底地址 
C. 栈顶内容 
D. 栈底内容   
答案 A 
 9. (5分)存储器的随机访问是指（ ）。 
A. 可随意访问存储器 
B. 按随机文件访问存储器 
C. 可对存储器进行读出与写入 
D. 可按地址访问存储器的任一编址单元，其访问时间相同且与地址无关   
答案 D 
 15. (5分)指令系统中采用不同寻址方式的目的主要是（ ）。 
A. 可直接访问外存 
B. 提供扩展操作码并降低指令译码难度 
C. 实现存储程序和程序控制 

D. 缩短指令长度，扩大寻址空间，提高编程灵活性   
答案 D 
